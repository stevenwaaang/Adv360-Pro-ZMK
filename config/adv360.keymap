/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE    &kp N1       &kp N2      &kp N3      &kp N4            &kp N5  &tog 1                                                                   &mo 3      &kp N6  &kp N7             &kp N8      &kp N9      &kp N0               &kp MINUS
&kp CAPSLOCK  &kp Q        &kp W       &kp E       &kp R             &kp T   &kp GRAVE                                                                &none      &kp Y   &kp U              &kp I       &kp O       &kp P                &kp BSLH
&kp TAB       &hm LCTRL A  &hm LALT S  &hm LCMD D  &hm LEFT_SHIFT F  &kp G   &none      &tog 1            &kp LALT      &kp RIGHT_CONTROL  &kp RCMD   &none      &kp H   &hm RIGHT_SHIFT J  &hm RCMD K  &hm RALT L  &hm RCTRL SEMICOLON  &kp SQT
&kp LSHFT     &kp Z        &kp X       &kp C       &kp V             &kp B                                &kp HOME      &kp PG_UP                                &kp N   &kp M              &kp COMMA   &kp DOT     &kp FSLH             &kp RSHFT
&tog 2        &kp GRAVE    &kp EQUAL   &kp LEFT    &kp RIGHT                 &kp BSPC   &kp LEFT_COMMAND  &kp END       &kp PG_DN          &kp ENTER  &kp SPACE          &kp UP             &kp DOWN    &kp LBKT    &kp RBKT             &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1            &kp N2             &kp N3                &kp N4                 &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q             &kp W              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp UP_ARROW  &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp LEFT    &kp DOWN      &kp RIGHT      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z             &kp X              &kp C                 &kp V                  &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp COMMA     &kp PERIOD     &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE         &kp EQUAL          &kp LEFT              &kp RIGHT                      &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp C_VOLUME_UP  &kp C_VOL_DN  &kp C_MUTE  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans           &trans        &trans      &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans           &trans        &trans      &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans           &trans        &trans      &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans           &trans        &trans      &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
